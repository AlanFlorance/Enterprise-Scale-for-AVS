{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.8.2.30886",
      "templateHash": "9766639663775139673"
    }
  },
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AVS",
      "maxLength": 20,
      "minLength": 1,
      "metadata": {
        "description": "The prefix to use on resources inside this template"
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional: The location the private cloud should be deployed to, by default this will be the location of the deployment"
      }
    },
    "VNetExists": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Set this to true if you are redeploying, and the VNet already exists"
      }
    },
    "ExistingVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Existing VNet name"
      }
    },
    "ExistingGatewayName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Existing Gateway name"
      }
    },
    "NewVNetAddressSpace": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The address space used for the VNet attached to AVS. Must be non-overlapping with existing networks"
      }
    },
    "NewVnetNewGatewaySubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The subnet CIDR used for the Gateway Subnet. Must be a /24 or greater within the VNetAddressSpace"
      }
    },
    "GatewayExists": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Set this to true if you are redeploying, and the VNet already exists"
      }
    },
    "GatewaySubnetExists": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Does the GatewaySubnet Exist"
      }
    },
    "ExistingGatewaySubnetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The existing vnet gatewaysubnet id"
      }
    },
    "ExistingVnetNewGatewaySubnetPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The existing vnet new gatewaysubnet prefix"
      }
    },
    "DeployNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "A string value to skip the networking deployment"
      }
    }
  },
  "variables": {
    "deploymentPrefix": "[format('AVS-{0}', uniqueString(deployment().name, parameters('Location')))]"
  },
  "resources": [
    {
      "condition": "[not(parameters('DeployNetworking'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-SkipNetworking', variables('deploymentPrefix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.2.30886",
              "templateHash": "15419533773683886955"
            }
          },
          "resources": []
        }
      }
    },
    {
      "condition": "[parameters('DeployNetworking')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-Network', variables('deploymentPrefix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Prefix": {
            "value": "[parameters('Prefix')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "VNetExists": {
            "value": "[parameters('VNetExists')]"
          },
          "ExistingVnetName": {
            "value": "[parameters('ExistingVnetName')]"
          },
          "GatewayExists": {
            "value": "[parameters('GatewayExists')]"
          },
          "ExistingGatewayName": {
            "value": "[parameters('ExistingGatewayName')]"
          },
          "GatewaySubnetExists": {
            "value": "[parameters('GatewaySubnetExists')]"
          },
          "ExistingGatewaySubnetId": {
            "value": "[parameters('ExistingGatewaySubnetId')]"
          },
          "ExistingVnetNewGatewaySubnetPrefix": {
            "value": "[parameters('ExistingVnetNewGatewaySubnetPrefix')]"
          },
          "NewVNetAddressSpace": {
            "value": "[parameters('NewVNetAddressSpace')]"
          },
          "NewVnetNewGatewaySubnetAddressPrefix": {
            "value": "[parameters('NewVnetNewGatewaySubnetAddressPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.2.30886",
              "templateHash": "1584509861958759296"
            }
          },
          "parameters": {
            "Location": {
              "type": "string"
            },
            "Prefix": {
              "type": "string"
            },
            "VNetExists": {
              "type": "bool"
            },
            "ExistingVnetName": {
              "type": "string"
            },
            "GatewayExists": {
              "type": "bool"
            },
            "ExistingGatewayName": {
              "type": "string"
            },
            "NewVNetAddressSpace": {
              "type": "string"
            },
            "NewVnetNewGatewaySubnetAddressPrefix": {
              "type": "string"
            },
            "GatewaySubnetExists": {
              "type": "bool"
            },
            "ExistingVnetNewGatewaySubnetPrefix": {
              "type": "string"
            },
            "ExistingGatewaySubnetId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}-Network', parameters('Prefix'))]",
              "location": "[parameters('Location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-Network', deployment().name)]",
              "resourceGroup": "[format('{0}-Network', parameters('Prefix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "Prefix": {
                    "value": "[parameters('Prefix')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "VNetExists": {
                    "value": "[parameters('VNetExists')]"
                  },
                  "ExistingVnetName": {
                    "value": "[parameters('ExistingVnetName')]"
                  },
                  "GatewayExists": {
                    "value": "[parameters('GatewayExists')]"
                  },
                  "ExistingGatewayName": {
                    "value": "[parameters('ExistingGatewayName')]"
                  },
                  "NewVNetAddressSpace": {
                    "value": "[parameters('NewVNetAddressSpace')]"
                  },
                  "NewVnetNewGatewaySubnetAddressPrefix": {
                    "value": "[parameters('NewVnetNewGatewaySubnetAddressPrefix')]"
                  },
                  "GatewaySubnetExists": {
                    "value": "[parameters('GatewaySubnetExists')]"
                  },
                  "ExistingGatewaySubnetId": {
                    "value": "[parameters('ExistingGatewaySubnetId')]"
                  },
                  "ExistingVnetNewGatewaySubnetPrefix": {
                    "value": "[parameters('ExistingVnetNewGatewaySubnetPrefix')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.8.2.30886",
                      "templateHash": "5649488151719978260"
                    }
                  },
                  "parameters": {
                    "VNetExists": {
                      "type": "bool"
                    },
                    "GatewayExists": {
                      "type": "bool"
                    },
                    "GatewaySubnetExists": {
                      "type": "bool"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "Prefix": {
                      "type": "string"
                    },
                    "ExistingVnetName": {
                      "type": "string"
                    },
                    "ExistingGatewayName": {
                      "type": "string"
                    },
                    "NewVNetAddressSpace": {
                      "type": "string"
                    },
                    "NewVnetNewGatewaySubnetAddressPrefix": {
                      "type": "string"
                    },
                    "NewGatewaySku": {
                      "type": "string",
                      "defaultValue": "Standard"
                    },
                    "ExistingGatewaySubnetId": {
                      "type": "string"
                    },
                    "ExistingVnetNewGatewaySubnetPrefix": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "NewVNetName": "[format('{0}-vnet', parameters('Prefix'))]",
                    "NewVnetNewGatewayName": "[format('{0}-gw', parameters('Prefix'))]",
                    "ExistingVnetNewGatewayName": "[format('{0}-egw', parameters('Prefix'))]"
                  },
                  "resources": [
                    {
                      "condition": "[and(parameters('VNetExists'), not(parameters('GatewaySubnetExists')))]",
                      "type": "Microsoft.Network/virtualNetworks/subnets",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}', parameters('ExistingVnetName'), 'GatewaySubnet')]",
                      "properties": {
                        "addressPrefix": "[parameters('ExistingVnetNewGatewaySubnetPrefix')]"
                      }
                    },
                    {
                      "condition": "[and(and(not(parameters('GatewayExists')), parameters('VNetExists')), not(parameters('GatewaySubnetExists')))]",
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2021-08-01",
                      "name": "[variables('ExistingVnetNewGatewayName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "gatewayType": "ExpressRoute",
                        "sku": {
                          "name": "[parameters('NewGatewaySku')]",
                          "tier": "[parameters('NewGatewaySku')]"
                        },
                        "ipConfigurations": [
                          {
                            "name": "default",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('ExistingVnetName'), 'GatewaySubnet')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('NewVnetNewGatewayName')))]"
                              }
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('ExistingVnetName'), 'GatewaySubnet')]",
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('NewVnetNewGatewayName')))]"
                      ]
                    },
                    {
                      "condition": "[and(not(parameters('GatewayExists')), parameters('VNetExists'))]",
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2021-08-01",
                      "name": "[variables('ExistingVnetNewGatewayName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "gatewayType": "ExpressRoute",
                        "sku": {
                          "name": "[parameters('NewGatewaySku')]",
                          "tier": "[parameters('NewGatewaySku')]"
                        },
                        "ipConfigurations": [
                          {
                            "name": "default",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('ExistingGatewaySubnetId')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('NewVnetNewGatewayName')))]"
                              }
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('NewVnetNewGatewayName')))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('VNetExists'))]",
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2021-02-01",
                      "name": "[variables('NewVNetName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('NewVNetAddressSpace')]"
                          ]
                        },
                        "subnets": [
                          {
                            "name": "GatewaySubnet",
                            "properties": {
                              "addressPrefix": "[parameters('NewVnetNewGatewaySubnetAddressPrefix')]"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "condition": "[not(parameters('GatewayExists'))]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2021-08-01",
                      "name": "[format('{0}-pip', variables('NewVnetNewGatewayName'))]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "publicIPAllocationMethod": "Dynamic"
                      },
                      "sku": {
                        "name": "Basic",
                        "tier": "Regional"
                      }
                    },
                    {
                      "condition": "[and(not(parameters('GatewayExists')), not(parameters('VNetExists')))]",
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2021-08-01",
                      "name": "[variables('NewVnetNewGatewayName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "gatewayType": "ExpressRoute",
                        "sku": {
                          "name": "[parameters('NewGatewaySku')]",
                          "tier": "[parameters('NewGatewaySku')]"
                        },
                        "ipConfigurations": [
                          {
                            "name": "default",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('NewVNetName')), '2021-02-01').subnets[0].id]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('NewVnetNewGatewayName')))]"
                              }
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('NewVnetNewGatewayName')))]",
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('NewVNetName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "VNetName": {
                      "type": "string",
                      "value": "[if(parameters('VNetExists'), parameters('ExistingVnetName'), variables('NewVNetName'))]"
                    },
                    "NewGatewayName": {
                      "type": "string",
                      "value": "[if(and(not(parameters('GatewayExists')), not(parameters('VNetExists'))), variables('NewVnetNewGatewayName'), variables('ExistingVnetNewGatewayName'))]"
                    },
                    "ExistingGatewayName": {
                      "type": "string",
                      "value": "[if(parameters('GatewayExists'), parameters('ExistingGatewayName'), parameters('ExistingGatewayName'))]"
                    },
                    "VNetResourceId": {
                      "type": "string",
                      "value": "[if(parameters('VNetExists'), resourceId('Microsoft.Network/virtualNetworks', parameters('ExistingVnetName')), resourceId('Microsoft.Network/virtualNetworks', variables('NewVNetName')))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-Network', parameters('Prefix')))]"
              ]
            }
          ],
          "outputs": {
            "NewGatewayName": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-Network', parameters('Prefix'))), 'Microsoft.Resources/deployments', format('{0}-Network', deployment().name))).outputs.NewGatewayName.value]"
            },
            "ExistingGatewayName": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-Network', parameters('Prefix'))), 'Microsoft.Resources/deployments', format('{0}-Network', deployment().name))).outputs.ExistingGatewayName.value]"
            },
            "VNetName": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-Network', parameters('Prefix'))), 'Microsoft.Resources/deployments', format('{0}-Network', deployment().name))).outputs.VNetName.value]"
            },
            "VNetResourceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-Network', parameters('Prefix'))), 'Microsoft.Resources/deployments', format('{0}-Network', deployment().name))).outputs.VNetResourceId.value]"
            },
            "NetworkResourceGroup": {
              "type": "string",
              "value": "[format('{0}-Network', parameters('Prefix'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('DeployNetworking')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-VNet', variables('deploymentPrefix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "NewGatewayName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-Network', variables('deploymentPrefix'))), '2020-10-01').outputs.NewGatewayName.value]"
          },
          "ExistingGatewayName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-Network', variables('deploymentPrefix'))), '2020-10-01').outputs.ExistingGatewayName.value]"
          },
          "NetworkResourceGroup": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-Network', variables('deploymentPrefix'))), '2020-10-01').outputs.NetworkResourceGroup.value]"
          },
          "VNetPrefix": {
            "value": "[parameters('Prefix')]"
          },
          "GatewayExists": {
            "value": "[parameters('GatewayExists')]"
          },
          "PrivateCloudName": {
            "value": "SJAVS-SDDC"
          },
          "PrivateCloudResourceGroup": {
            "value": "SJAVS-PrivateCloud"
          },
          "Location": {
            "value": "[parameters('Location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.2.30886",
              "templateHash": "10595551346266796413"
            }
          },
          "parameters": {
            "VNetPrefix": {
              "type": "string"
            },
            "AVSPrefix": {
              "type": "string",
              "defaultValue": "[parameters('VNetPrefix')]"
            },
            "PrivateCloudResourceGroup": {
              "type": "string"
            },
            "PrivateCloudName": {
              "type": "string"
            },
            "NetworkResourceGroup": {
              "type": "string"
            },
            "GatewayExists": {
              "type": "bool"
            },
            "NewGatewayName": {
              "type": "string"
            },
            "ExistingGatewayName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-ExRAuth', deployment().name)]",
              "resourceGroup": "[parameters('PrivateCloudResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ConnectionName": {
                    "value": "[format('{0}-VNet', parameters('VNetPrefix'))]"
                  },
                  "PrivateCloudName": {
                    "value": "[parameters('PrivateCloudName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.8.2.30886",
                      "templateHash": "2422646138301630198"
                    }
                  },
                  "parameters": {
                    "PrivateCloudName": {
                      "type": "string"
                    },
                    "ConnectionName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.AVS/privateClouds/authorizations",
                      "apiVersion": "2021-06-01",
                      "name": "[format('{0}/{1}', parameters('PrivateCloudName'), parameters('ConnectionName'))]"
                    }
                  ],
                  "outputs": {
                    "ExpressRouteAuthorizationKey": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.AVS/privateClouds/authorizations', parameters('PrivateCloudName'), parameters('ConnectionName'))).expressRouteAuthorizationKey]"
                    },
                    "ExpressRouteId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.AVS/privateClouds', parameters('PrivateCloudName')), '2021-06-01').circuit.expressRouteID]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-ExR', deployment().name)]",
              "resourceGroup": "[parameters('NetworkResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "NewGWConnectionName": {
                    "value": "[format('{0}-AVS-GW', parameters('AVSPrefix'))]"
                  },
                  "ExistingGWConnectionName": {
                    "value": "[format('{0}-AVS-EGW', parameters('AVSPrefix'))]"
                  },
                  "GatewayExists": {
                    "value": "[parameters('GatewayExists')]"
                  },
                  "NewGatewayName": {
                    "value": "[parameters('NewGatewayName')]"
                  },
                  "ExistingGatewayName": {
                    "value": "[parameters('ExistingGatewayName')]"
                  },
                  "ExpressRouteAuthorizationKey": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('PrivateCloudResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-ExRAuth', deployment().name))).outputs.ExpressRouteAuthorizationKey.value]"
                  },
                  "ExpressRouteId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('PrivateCloudResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-ExRAuth', deployment().name))).outputs.ExpressRouteId.value]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.8.2.30886",
                      "templateHash": "14046289494167747390"
                    }
                  },
                  "parameters": {
                    "GatewayExists": {
                      "type": "bool"
                    },
                    "NewGatewayName": {
                      "type": "string"
                    },
                    "NewGWConnectionName": {
                      "type": "string"
                    },
                    "ExistingGatewayName": {
                      "type": "string"
                    },
                    "ExistingGWConnectionName": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "ExpressRouteAuthorizationKey": {
                      "type": "secureString"
                    },
                    "ExpressRouteId": {
                      "type": "secureString"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('GatewayExists'))]",
                      "type": "Microsoft.Network/connections",
                      "apiVersion": "2021-02-01",
                      "name": "[parameters('NewGWConnectionName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "connectionType": "ExpressRoute",
                        "routingWeight": 0,
                        "virtualNetworkGateway1": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('NewGatewayName'))]",
                          "properties": {}
                        },
                        "peer": {
                          "id": "[parameters('ExpressRouteId')]"
                        },
                        "authorizationKey": "[parameters('ExpressRouteAuthorizationKey')]"
                      }
                    },
                    {
                      "condition": "[parameters('GatewayExists')]",
                      "type": "Microsoft.Network/connections",
                      "apiVersion": "2021-02-01",
                      "name": "[parameters('ExistingGWConnectionName')]",
                      "location": "[parameters('Location')]",
                      "properties": {
                        "connectionType": "ExpressRoute",
                        "routingWeight": 0,
                        "virtualNetworkGateway1": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('ExistingGatewayName'))]",
                          "properties": {}
                        },
                        "peer": {
                          "id": "[parameters('ExpressRouteId')]"
                        },
                        "authorizationKey": "[parameters('ExpressRouteAuthorizationKey')]"
                      }
                    }
                  ],
                  "outputs": {
                    "ExRConnectionResourceId": {
                      "type": "string",
                      "value": "[if(parameters('GatewayExists'), resourceId('Microsoft.Network/connections', parameters('ExistingGWConnectionName')), resourceId('Microsoft.Network/connections', parameters('NewGWConnectionName')))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('PrivateCloudResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-ExRAuth', deployment().name))]"
              ]
            }
          ],
          "outputs": {
            "ExRConnectionResourceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('NetworkResourceGroup')), 'Microsoft.Resources/deployments', format('{0}-ExR', deployment().name))).outputs.ExRConnectionResourceId.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-Network', variables('deploymentPrefix')))]"
      ]
    }
  ]
}